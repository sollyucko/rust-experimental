error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:1:43
   |
LL | pub fn no_vec_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`
...
LL |     Vec::<A>::new()
   |     --------------- this returned value is of type `std::vec::Vec<A>`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<[B; 33]>` for `std::vec::Vec<A>`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:9:51
   |
LL | pub fn no_vec_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`
...
LL |     Vec::<A>::new()
   |     --------------- this returned value is of type `std::vec::Vec<A>`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a [B; 33]>` for `std::vec::Vec<A>`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:17:58
   |
LL | pub fn yes_array_partial_eq_vec<A, B>(array: [A; 33]) -> impl PartialEq<Vec<B>>
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[A; 33]`
...
LL |     array
   |     ----- this returned value is of type `[A; 33]`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<std::vec::Vec<B>>` for `[A; 33]`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:25:74
   |
LL | pub fn yes_ref_array_partial_eq_vec<'a, A, B>(ref_array: &'a [A; 33]) -> impl PartialEq<Vec<B>> + 'a
   |                                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[A; 33]`
...
LL |     ref_array
   |     --------- this returned value is of type `&'a [A; 33]`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<std::vec::Vec<B>>` for `&[A; 33]`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:35:6
   |
LL | ) -> impl PartialEq<Vec<B>> + 'a
   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[A; 33]`
...
LL |     ref_mut_array
   |     ------------- this returned value is of type `&'a mut [A; 33]`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<std::vec::Vec<B>>` for `&mut [A; 33]`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:45:48
   |
LL | pub fn no_vecdeque_partial_eq_array<A, B>() -> impl PartialEq<[B; 33]>
   |                                                ^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`
...
LL |     VecDeque::<A>::new()
   |     -------------------- this returned value is of type `std::collections::VecDeque<A>`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<[B; 33]>` for `std::collections::VecDeque<A>`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:53:56
   |
LL | pub fn no_vecdeque_partial_eq_ref_array<'a, A, B>() -> impl PartialEq<&'a [B; 33]>
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`
...
LL |     VecDeque::<A>::new()
   |     -------------------- this returned value is of type `std::collections::VecDeque<A>`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a [B; 33]>` for `std::collections::VecDeque<A>`
   = note: the return type of a function must have a statically known size

error[E0277]: arrays only have std trait implementations for lengths 0..=32
  --> $DIR/alloc-traits-no-impls-length-33.rs:61:60
   |
LL | pub fn no_vecdeque_partial_eq_ref_mut_array<'a, A, B>() -> impl PartialEq<&'a mut [B; 33]>
   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::array::LengthAtMost32` is not implemented for `[B; 33]`
...
LL |     VecDeque::<A>::new()
   |     -------------------- this returned value is of type `std::collections::VecDeque<A>`
   |
   = note: required because of the requirements on the impl of `std::cmp::PartialEq<&'a mut [B; 33]>` for `std::collections::VecDeque<A>`
   = note: the return type of a function must have a statically known size

error: aborting due to 8 previous errors

For more information about this error, try `rustc --explain E0277`.
